import{_ as e,c as a,o as d,a as o}from"./app.01c99117.js";const b=JSON.parse('{"title":"Database","description":"","frontmatter":{},"headers":[{"level":2,"title":"Host","slug":"host","link":"#host","children":[]},{"level":2,"title":"Port","slug":"port","link":"#port","children":[]},{"level":2,"title":"Database","slug":"database-1","link":"#database-1","children":[]},{"level":2,"title":"Username","slug":"username","link":"#username","children":[]},{"level":2,"title":"Password","slug":"password","link":"#password","children":[]},{"level":2,"title":"Dialect","slug":"dialect","link":"#dialect","children":[]}],"relativePath":"config/api/database.md"}'),t={name:"config/api/database.md"},i=o('<h1 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-hidden="true">#</a></h1><p>Path: <code>packages/db/src/config.ts</code></p><p>System consists of two databases:</p><ul><li>Foods - stores food-related information, mostly static content</li><li>System - stores users/surveys related information, system configuration etc</li></ul><p>Connection info is defined per-environment (<code>development</code>, <code>test</code>, <code>production</code>) and per-database (<code>foods</code> and <code>system</code>).</p><p>Path: <code>src/config/database.ts</code></p><h2 id="host" tabindex="-1">Host <a class="header-anchor" href="#host" aria-hidden="true">#</a></h2><ul><li>object-path: <code>[environment][database].host</code></li><li>dotenv var: <code>DB_FOODS_HOST</code> and <code>DB_SYSTEM_HOST</code></li><li>type: <code>string</code></li><li>default: <code>&#39;localhost&#39;</code></li></ul><h2 id="port" tabindex="-1">Port <a class="header-anchor" href="#port" aria-hidden="true">#</a></h2><ul><li>object-path: <code>[environment][database].port</code></li><li>dotenv var: <code>DB_FOODS_PORT</code> and <code>DB_SYSTEM_PORT</code></li><li>type: <code>number</code></li><li>default: <code>5432</code></li></ul><h2 id="database-1" tabindex="-1">Database <a class="header-anchor" href="#database-1" aria-hidden="true">#</a></h2><ul><li>object-path: <code>[environment][database].database</code></li><li>dotenv var: <code>DB_FOODS_DATABASE</code> and <code>DB_SYSTEM_DATABASE</code></li><li>type: <code>string</code></li><li>default: <code>&#39;intake24_foods&#39;</code> and <code>&#39;intake24_system&#39;</code></li></ul><h2 id="username" tabindex="-1">Username <a class="header-anchor" href="#username" aria-hidden="true">#</a></h2><ul><li>object-path: <code>[environment][database].username</code></li><li>dotenv var: <code>DB_FOODS_USERNAME</code> and <code>DB_SYSTEM_USERNAME</code></li><li>type: <code>string</code></li><li>default: <code>&#39;intake24&#39;</code></li></ul><h2 id="password" tabindex="-1">Password <a class="header-anchor" href="#password" aria-hidden="true">#</a></h2><ul><li>object-path: <code>[environment][database].password</code></li><li>dotenv var: <code>DB_FOODS_PASSWORD</code> and <code>DB_SYSTEM_PASSWORD</code></li><li>type: <code>string</code></li><li>default: <code>&#39;&#39;</code></li></ul><h2 id="dialect" tabindex="-1">Dialect <a class="header-anchor" href="#dialect" aria-hidden="true">#</a></h2><ul><li>object-path: <code>[environment][database].dialect</code></li><li>dotenv var: <code>DB_FOODS_DRIVER</code> and <code>DB_SYSTEM_DRIVER</code></li><li>type: <code>&#39;mysql&#39; | &#39;postgres&#39; | &#39;sqlite&#39; | &#39;mariadb&#39; | &#39;mssql&#39;</code></li><li>default: <code>&#39;postgres&#39;</code></li></ul>',18),c=[i];function l(s,n,r,h,_,p){return d(),a("div",null,c)}const m=e(t,[["render",l]]);export{b as __pageData,m as default};
