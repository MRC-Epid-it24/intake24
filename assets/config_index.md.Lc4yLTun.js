import{_ as a,c as n,ag as t,o}from"./chunks/framework.CB8iguzh.js";const u=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"config/index.md","filePath":"config/index.md"}'),i={name:"config/index.md"};function s(r,e,d,c,l,p){return o(),n("div",null,e[0]||(e[0]=[t('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>All parts of the system are using environment variables. Environment specific configuration is parsed to <code>process.env</code> variables. All applications are using <a href="https://github.com/motdotla/dotenv" target="_blank" rel="noreferrer"><code>dotenv</code></a> and <a href="https://github.com/motdotla/dotenv-expand" target="_blank" rel="noreferrer"><code>dotenv-expand</code></a> to set environment variables.</p><p>Each <code>application</code> / <code>package</code> loads <code>.env</code> file in respective directory. There is an example file (<code>.env-template</code>) in each relevant directory, which can be used as template.</p><h2 id="setting-up-your-environment" tabindex="-1">Setting Up Your Environment <a class="header-anchor" href="#setting-up-your-environment" aria-label="Permalink to &quot;Setting Up Your Environment&quot;">​</a></h2><p>You have two options for creating your <code>.env</code> file:</p><h3 id="option-1-manual-clone" tabindex="-1">Option 1: Manual Clone <a class="header-anchor" href="#option-1-manual-clone" aria-label="Permalink to &quot;Option 1: Manual Clone&quot;">​</a></h3><p>Copy the <code>.env-template</code> file in respective folder and modify the <code>.env</code> file as needed.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env-template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><h3 id="option-2-cli-generation" tabindex="-1">Option 2: CLI Generation <a class="header-anchor" href="#option-2-cli-generation" aria-label="Permalink to &quot;Option 2: CLI Generation&quot;">​</a></h3><p>For a more streamlined approach, you can use our CLI tool to generate .env files (each in <code>api</code>, <code>admin</code> and <code>survey</code> folder)</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate-env</span></span></code></pre></div><p>For detailed instructions on using the CLI, please refer to our <code>.env</code> generation <a href="/cli/generate-env">guideline</a>. Choose the method that best suits your workflow and project needs.</p>',12)]))}const g=a(i,[["render",s]]);export{u as __pageData,g as default};
