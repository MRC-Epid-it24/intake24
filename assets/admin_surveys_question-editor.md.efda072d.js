import{_ as e,o as t,c as o,R as i}from"./chunks/framework.fed62f4c.js";const f=JSON.parse('{"title":"Question editor","description":"","frontmatter":{},"headers":[],"relativePath":"admin/surveys/question-editor.md","filePath":"admin/surveys/question-editor.md"}'),d={name:"admin/surveys/question-editor.md"},n=i('<h1 id="question-editor" tabindex="-1">Question editor <a class="header-anchor" href="#question-editor" aria-label="Permalink to &quot;Question editor&quot;">​</a></h1><p>Full screen modal opens when <code>add</code> or <code>edit</code> button is clicked.</p><p>Top level toolbar has:</p><ul><li><code>Cancel</code> button on the left - prompt changes are discarded</li><li><code>Confirm</code> button on the right - prompt changes are confirmed, but not yet saved to server&#39;s database</li><li>Tab list with: <ul><li><code>General</code> - Question type &amp; id &amp; name of the question <code>internal-only</code> purposes</li><li><code>Content</code> - Localized question content fields</li><li><code>Conditions</code> - Conditions list to be met to display the question</li><li><code>Validation</code> - Validation options, i.e. question is optional or required</li><li><code>Options</code> - Additional per-question type options</li></ul></li></ul><h2 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-label="Permalink to &quot;General&quot;">​</a></h2><p>General tab defines administrative fields</p><ul><li><p><code>Type</code> - Questions are categorized to three types:</p><ul><li><a href="/admin/surveys/question-types.html#custom-prompts">custom questions</a></li><li><a href="/admin/surveys/question-types.html#standard-prompts">standard questions</a></li><li><a href="/admin/surveys/question-types.html#portion-size-prompts">portion size questions</a></li></ul></li><li><p><code>ID</code> - <code>scheme-unique</code> ID assigned to question</p></li></ul><div class="tip custom-block"><p class="custom-block-title">Question ID usage</p><ul><li>Question ID of custom prompt is used as identifier in data exports file. It is also used to identify question in the scheme.</li><li>Question ID is used to load question from <code>template</code> and to sync question properties from <code>template</code>.</li></ul></div><ul><li><code>Name</code> - User friendly name for easier orientation (for internal use only).</li></ul><h2 id="content" tabindex="-1">Content <a class="header-anchor" href="#content" aria-label="Permalink to &quot;Content&quot;">​</a></h2><p>Content tab defines respondent facing content text fields and their localized versions.</p><ul><li><code>Name</code> - Short question name displayed in top breadcrumbs component</li><li><code>Text</code> - Text displayed in the header component (usually defaults to meal name for meal-level questions and to food name for food-level questions)</li><li><code>Description</code> - Main body of question details, which allows to embed <code>rich-text</code> content</li></ul><p>All fields can be localized to <a href="/admin/localization/languages.html">languages</a> set up in the database.</p><p>Following variables can be used in the fields:</p><ul><li><code>{meal}</code> - Meal name &amp; time</li><li><code>{mealName}</code> - Meal name</li><li><code>{mealTime}</code> - Meal time</li><li><code>{food}</code> - Food name</li><li><code>{item}</code> - Food name or Meal name depending on question level type</li></ul><h2 id="conditions" tabindex="-1">Conditions <a class="header-anchor" href="#conditions" aria-label="Permalink to &quot;Conditions&quot;">​</a></h2><p>Conditions tab defines list of conditions that needs to be met to display the question.</p><ul><li>If conditions is empty, question is always displayed.</li><li>If conditions is not empty, question is only displayed once all conditions are met.</li></ul><h3 id="operations" tabindex="-1">Operations <a class="header-anchor" href="#operations" aria-label="Permalink to &quot;Operations&quot;">​</a></h3><p>Each condition can be defined by following operations:</p><table><thead><tr><th>Operation</th><th>Value type</th><th>Description</th></tr></thead><tbody><tr><td><code>eq</code></td><td>string | string[]</td><td>Prompt answer equals to defined value</td></tr><tr><td><code>nt</code></td><td>string | string[]</td><td>Prompt answer does not equal to defined value</td></tr><tr><td><code>in</code></td><td>string | string[]</td><td>One of the prompt answers is included defined value-list</td></tr><tr><td><code>notIn</code></td><td>string | string[]</td><td>None of the prompt answers is included in defined value-list</td></tr><tr><td><code>gte</code></td><td>number</td><td>Prompt answer is greater than or equals to defined value</td></tr><tr><td><code>gt</code></td><td>number</td><td>Prompt answer is greater than defined value</td></tr><tr><td><code>lte</code></td><td>number</td><td>Prompt answer is lower than or equals to defined value</td></tr><tr><td><code>lt</code></td><td>number</td><td>Prompt answer is lower than defined value</td></tr></tbody></table><h2 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h2><p>Validation tab defines validation options, i.e. whether question is optional or required.</p><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><p>Options tab defines additional per-question type options. See <a href="/admin/surveys/question-types.html">Question types</a> for more details.</p>',25),a=[n];function s(l,r,c,u,p,m){return t(),o("div",null,a)}const q=e(d,[["render",s]]);export{f as __pageData,q as default};
