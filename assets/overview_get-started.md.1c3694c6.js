import{_ as s,c as e,o as a,a as n}from"./app.01c99117.js";const v=JSON.parse('{"title":"Get started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Repository","slug":"repository","link":"#repository","children":[]},{"level":2,"title":"API Server","slug":"api-server","link":"#api-server","children":[]},{"level":2,"title":"Database","slug":"database","link":"#database","children":[]},{"level":2,"title":"Admin client","slug":"admin-client","link":"#admin-client","children":[]},{"level":2,"title":"Survey client","slug":"survey-client","link":"#survey-client","children":[]},{"level":2,"title":"Documentation","slug":"documentation","link":"#documentation","children":[]}],"relativePath":"overview/get-started.md"}'),p={name:"overview/get-started.md"},l=n(`<h1 id="get-started" tabindex="-1">Get started <a class="header-anchor" href="#get-started" aria-hidden="true">#</a></h1><p>This section briefly describes how to configure, build and start the Intake24 components.</p><h2 id="repository" tabindex="-1">Repository <a class="header-anchor" href="#repository" aria-hidden="true">#</a></h2><p>Clone the repository</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/MRC-Epid-it24/intake24</span></span>
<span class="line"></span></code></pre></div><p>Repository is set as mono-repository with <a href="https://docs.npmjs.com/cli/v7/using-npm/workspaces" target="_blank" rel="noreferrer">workspaces</a>.</p><p>Shared components are in <code>packages</code> folder. Applications are in <code>apps</code> folder.</p><p>Install <code>pnpm</code> using built-in <code>npm</code> (see <a href="https://pnpm.io" target="_blank" rel="noreferrer">pnpm docs</a> for further options).</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">npm install -g pnpm</span></span>
<span class="line"></span></code></pre></div><p>Install project dependencies</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm install</span></span>
<span class="line"></span></code></pre></div><p>Set up <code>.env</code> file for each application you want to build, see below.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> apps/{app}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cp .env-template .env</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">nano .env</span></span>
<span class="line"></span></code></pre></div><p>Build all applications</p><ul><li>run command either from top-level to build all applications (<code>api</code>, <code>cli</code>, <code>admin</code>, <code>portal</code> and <code>survey</code>).</li><li>run command from <code>apps/{app}</code> folder to build specific application</li></ul><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm build</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Environment variables</p><p>Code is using <code>.env </code> environment files. Each project contains a template file (<code>.env-template</code>). If you&#39;re setting up fresh project, you can run CLI command, which generates all the files and couple of required specific keys. Follow the <a href="/cli/">CLI instructions</a> and how to run <a href="/cli/generate-env.html">generate-env</a>.</p><p>Some of the environment variables are either bundled in or used to configure build of SPA applications. Make sure you set up those <code>.env</code> file before running build for SPAs.</p></div><h2 id="api-server" tabindex="-1">API Server <a class="header-anchor" href="#api-server" aria-hidden="true">#</a></h2><p>Navigate to <code>apps/api</code> directory.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> apps/api</span></span>
<span class="line"></span></code></pre></div><p>Copy template of configuration file and edit it as required. Please see <a href="/config/">Configuration</a> section for detailed description of configuration options.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">cp .env-template .env</span></span>
<span class="line"></span></code></pre></div><p>Build the application</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm build</span></span>
<span class="line"></span></code></pre></div><p>Start the application</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm start</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">For production, consider</p><ol><li>Deploying as dedicated service. Refer to your OS environment how to set that up.</li><li>User process manager, e.g. <a href="https://pm2.keymetrics.io" target="_blank" rel="noreferrer">PM2</a></li><li>Deploy behind proper http server, e.g. <a href="https://www.nginx.com" target="_blank" rel="noreferrer">Nginx</a>, <a href="https://www.apache.org" target="_blank" rel="noreferrer">Apache</a> etc.</li></ol></div><p>Deployment section / ansible scripts provide examples how to use dedicated service on Ubuntu and run it behind Nginx reverse proxy.</p><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-hidden="true">#</a></h2><ul><li>project is using <a href="https://github.com/sequelize/cli" target="_blank" rel="noreferrer">sequelize-cli</a></li><li>database layer is located in <code>packages/db</code></li><li>config / migration files (per database) are store in respective <code>packages/db/sequelize/{database}</code> folders</li></ul><p>Set up <code>.env</code> file if running independently of API server so it can load connection details</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">cp .env-template .env</span></span>
<span class="line"></span></code></pre></div><p>Migrations can be executed from root-level or package level with following commands</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#676E95;"># both databases</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm db:migrate</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># or each database</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># foods</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm db:migrate:foods</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># system</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm db:migrate:system</span></span>
<span class="line"></span></code></pre></div><h2 id="admin-client" tabindex="-1">Admin client <a class="header-anchor" href="#admin-client" aria-hidden="true">#</a></h2><p>Navigate to <code>apps/admin</code> directory.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> apps/admin</span></span>
<span class="line"></span></code></pre></div><p>Copy template of configuration file and edit it as required. Please see <a href="/config/">Configuration</a> section for detailed description of configuration options.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">cp .env-template .env</span></span>
<span class="line"></span></code></pre></div><p>Build the application</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm build</span></span>
<span class="line"></span></code></pre></div><p>Start the application</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm start</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This should only be used if you host the client on separate domain. It will start separate http server to serve the application.</p></div><p>Serve the application locally in development mode with hot-reload</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm dev</span></span>
<span class="line"></span></code></pre></div><h2 id="survey-client" tabindex="-1">Survey client <a class="header-anchor" href="#survey-client" aria-hidden="true">#</a></h2><p>Navigate to <code>apps/survey</code> directory.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> apps/survey</span></span>
<span class="line"></span></code></pre></div><p>Copy template of configuration file and edit it as required. Please see <a href="/config/">Configuration</a> section for detailed description of configuration options.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">cp .env-template .env</span></span>
<span class="line"></span></code></pre></div><p>Build the application</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm build</span></span>
<span class="line"></span></code></pre></div><p>Start the application</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm start</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This should only be used if you host the client on separate domain. It will start separate http server to serve the application.</p></div><p>Serve the application locally in development mode with hot-reload</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm dev</span></span>
<span class="line"></span></code></pre></div><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-hidden="true">#</a></h2><p>Documentation is built with <a href="https://vitepress.vuejs.org" target="_blank" rel="noreferrer">vitepress</a>.</p><p>Serve the application locally in development mode with hot-reload</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm docs:dev</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Documentation is automatically rebuilt and deployed to dedicated site whenever source code is updated.</p></div>`,63),t=[l];function o(i,c,r,d,u,h){return a(),e("div",null,t)}const b=s(p,[["render",o]]);export{v as __pageData,b as default};
