import{_ as o,c as t,o as i,ag as a}from"./chunks/framework.CSeR4K32.js";const h=JSON.parse('{"title":"Application","description":"","frontmatter":{},"headers":[],"relativePath":"config/api/application.md","filePath":"config/api/application.md"}'),l={name:"config/api/application.md"};function c(d,e,r,n,s,p){return i(),t("div",null,e[0]||(e[0]=[a('<h1 id="application" tabindex="-1">Application <a class="header-anchor" href="#application" aria-label="Permalink to &quot;Application&quot;">‚Äã</a></h1><p>Path: <code>apps/api/src/config/app.ts</code></p><h2 id="node-environment" tabindex="-1">Node environment <a class="header-anchor" href="#node-environment" aria-label="Permalink to &quot;Node environment&quot;">‚Äã</a></h2><p>Node environment to start the application in.</p><ul><li>object-path: <code>env</code></li><li>dotenv var: <code>NODE_ENV</code></li><li>type: <code>&#39;development&#39; | &#39;test&#39; | &#39;production&#39;</code></li><li>default: <code>&#39;development&#39;</code></li></ul><h2 id="name" tabindex="-1">Name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;Name&quot;">‚Äã</a></h2><p>Application name.</p><ul><li>object-path: <code>env</code></li><li>dotenv var: <code>APP_NAME</code></li><li>type: <code>string</code></li><li>default: <code>&#39;Intake24&#39;</code></li></ul><h2 id="icon-üç¥" tabindex="-1">Icon üç¥ <a class="header-anchor" href="#icon-üç¥" aria-label="Permalink to &quot;Icon üç¥&quot;">‚Äã</a></h2><p>Application icon - unicode character.</p><ul><li>object-path: <code>env</code></li><li>dotenv var: <code>APP_ICON</code></li><li>type: <code>string | undefined</code></li><li>default: undefined</li></ul><h2 id="powered-by" tabindex="-1">Powered by <a class="header-anchor" href="#powered-by" aria-label="Permalink to &quot;Powered by&quot;">‚Äã</a></h2><p>Powered by text (e.g. local team running the instance).</p><ul><li>object-path: <code>env</code></li><li>dotenv var: <code>APP_POWERED_BY</code></li><li>type: <code>string | undefined</code></li><li>default: undefined</li></ul><h2 id="host" tabindex="-1">Host <a class="header-anchor" href="#host" aria-label="Permalink to &quot;Host&quot;">‚Äã</a></h2><p>Internal hostname application listens on.</p><ul><li>object-path: <code>host</code></li><li>dotenv var: <code>APP_HOST</code></li><li>type: <code>string</code></li><li>default: <code>&#39;localhost&#39;</code></li></ul><h2 id="port" tabindex="-1">Port <a class="header-anchor" href="#port" aria-label="Permalink to &quot;Port&quot;">‚Äã</a></h2><p>Internal port application listens on.</p><ul><li>object-path: <code>port</code></li><li>dotenv var: <code>APP_PORT</code></li><li>type: <code>number</code></li><li>default: <code>3100</code></li></ul><h2 id="secret" tabindex="-1">Secret <a class="header-anchor" href="#secret" aria-label="Permalink to &quot;Secret&quot;">‚Äã</a></h2><p>Secret key to use for in-app signing/encryption (cookie/session)</p><p>(You need to replace the default value, e.g. verybigappsecret)</p><ul><li>object-path: <code>secret</code></li><li>dotenv var: <code>APP_SECRET</code></li><li>type: <code>string</code></li><li>default: <code>&#39;&#39;</code></li></ul><h2 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-label="Permalink to &quot;HTTPS&quot;">‚Äã</a></h2><p>Flag whether to use HTTPS protocol, for development purposes. Defaults to <code>false</code>.</p><p>Certificates are generated by <a href="https://github.com/FiloSottile/mkcert" target="_blank" rel="noreferrer"><code>mkcert</code></a> &amp; <a href="https://github.com/liuweiGL/vite-plugin-mkcert" target="_blank" rel="noreferrer"><code>vite-plugin-mkcert</code></a>.</p><ul><li>firstly boot up any frontend application in dev mode, which will generate certificates on first run</li><li>then boot up <code>API server</code> in dev mode</li><li>certificates are stored in user home directory by default, i.e. <code>~/vite-plugin-mkcert</code></li></ul><p>For production, it is recommended to use <code>http</code> protocol and reverse proxy (e.g. <code>nginx</code>) to handle HTTPS.</p><ul><li>object-path: <code>https</code></li><li>dotenv var: <code>DEV_HTTPS</code></li><li>type: <code>boolean</code></li><li>default: <code>false</code></li></ul><h2 id="https-certificates-path" tabindex="-1">HTTPS certificates path <a class="header-anchor" href="#https-certificates-path" aria-label="Permalink to &quot;HTTPS certificates path&quot;">‚Äã</a></h2><p>Path to local certificates folder</p><p>Certificates are generated by <a href="https://github.com/FiloSottile/mkcert" target="_blank" rel="noreferrer"><code>mkcert</code></a> &amp; <a href="https://github.com/liuweiGL/vite-plugin-mkcert" target="_blank" rel="noreferrer"><code>vite-plugin-mkcert</code></a>.</p><ul><li><p>certificates are stored in user home directory by default, i.e.</p></li><li><p>object-path: <code>certPath</code></p></li><li><p>dotenv var: <code>DEV_MKCERT_PATH</code></p></li><li><p>type: <code>string</code></p></li><li><p>default: <code>undefined</code> (resolves to default: <code>~/vite-plugin-mkcert</code>)</p></li></ul><h2 id="sites-urls" tabindex="-1">Sites URLs <a class="header-anchor" href="#sites-urls" aria-label="Permalink to &quot;Sites URLs&quot;">‚Äã</a></h2><p>List of sites URLs. These can either be relative or absolute URLs.</p><ul><li>absolute URL -&gt; site is hosted on different domain</li><li>relative URL -&gt; site is hosted on same domain. URL gets registered as route.</li></ul><h3 id="base-url-domain" tabindex="-1">Base URL / Domain <a class="header-anchor" href="#base-url-domain" aria-label="Permalink to &quot;Base URL / Domain&quot;">‚Äã</a></h3><p>Domain / base url to resolve fully qualified sites URLs (if relative)</p><ul><li>object-path: <code>urls.base</code></li><li>dotenv var: <code>APP_URL_BASE</code></li><li>type: <code>string</code></li><li>default: <code>&#39;localhost:3100&#39;</code></li></ul><h3 id="admin-url" tabindex="-1">Admin URL <a class="header-anchor" href="#admin-url" aria-label="Permalink to &quot;Admin URL&quot;">‚Äã</a></h3><p>URL of admin site.</p><ul><li>object-path: <code>urls.admin</code></li><li>dotenv var: <code>APP_URL_ADMIN</code></li><li>type: <code>string</code></li><li>default: <code>&#39;/admin&#39;</code></li></ul><h3 id="documentation-url" tabindex="-1">Documentation URL <a class="header-anchor" href="#documentation-url" aria-label="Permalink to &quot;Documentation URL&quot;">‚Äã</a></h3><p>URL of documentation site.</p><ul><li>object-path: <code>urls.docs</code></li><li>dotenv var: <code>APP_URL_DOCS</code></li><li>type: <code>string</code></li><li>default: <code>&#39;/docs&#39;</code></li></ul><h3 id="survey-url" tabindex="-1">Survey URL <a class="header-anchor" href="#survey-url" aria-label="Permalink to &quot;Survey URL&quot;">‚Äã</a></h3><p>URL of survey site.</p><ul><li>object-path: <code>urls.survey</code></li><li>dotenv var: <code>APP_URL_SURVEY</code></li><li>type: <code>string</code></li><li>default: <code>&#39;/survey&#39;</code></li></ul><h3 id="images-url" tabindex="-1">Images URL <a class="header-anchor" href="#images-url" aria-label="Permalink to &quot;Images URL&quot;">‚Äã</a></h3><p>URL of images.</p><ul><li>object-path: <code>urls.images</code></li><li>dotenv var: <code>APP_URL_IMAGES</code></li><li>type: <code>string</code></li><li>default: <code>&#39;localhost:3100/images&#39;</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Default setup allows local images serving - ideal for development purposes. For production, use reverse proxy, CDN etc.</p></div>',53)]))}const m=o(l,[["render",c]]);export{h as __pageData,m as default};
