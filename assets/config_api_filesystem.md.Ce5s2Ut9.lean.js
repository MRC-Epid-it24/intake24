import{_ as o,c as i,a2 as a,o as l}from"./chunks/framework.BXzywdaw.js";const f=JSON.parse('{"title":"Filesystem","description":"","frontmatter":{},"headers":[],"relativePath":"config/api/filesystem.md","filePath":"config/api/filesystem.md"}'),d={name:"config/api/filesystem.md"};function t(r,e,c,s,n,p){return l(),i("div",null,e[0]||(e[0]=[a('<h1 id="filesystem" tabindex="-1">Filesystem <a class="header-anchor" href="#filesystem" aria-label="Permalink to &quot;Filesystem&quot;">​</a></h1><p>Path: <code>apps/api/src/config/filesystem.ts</code></p><h2 id="public-dir" tabindex="-1">Public dir <a class="header-anchor" href="#public-dir" aria-label="Permalink to &quot;Public dir&quot;">​</a></h2><p>Public directory for serving static files.</p><ul><li>object-path: <code>local.public</code></li><li>dotenv var: <code>FS_PUBLIC</code></li><li>type: <code>string</code></li><li>default: <code>&#39;public&#39;</code></li></ul><h2 id="upload-dir" tabindex="-1">Upload dir <a class="header-anchor" href="#upload-dir" aria-label="Permalink to &quot;Upload dir&quot;">​</a></h2><p>Upload directory for storing temporarily uploaded files.</p><ul><li>object-path: <code>local.upload</code></li><li>dotenv var: <code>FS_UPLOAD</code></li><li>type: <code>string</code></li><li>default: <code>&#39;storage/upload&#39;</code></li></ul><h2 id="download-dir" tabindex="-1">Download dir <a class="header-anchor" href="#download-dir" aria-label="Permalink to &quot;Download dir&quot;">​</a></h2><p>Download directory for storing temporarily downloaded files.</p><ul><li>object-path: <code>local.download</code></li><li>dotenv var: <code>FS_DOWNLOAD</code></li><li>type: <code>string</code></li><li>default: <code>&#39;storage/download&#39;</code></li></ul><h2 id="images-dir" tabindex="-1">Images dir <a class="header-anchor" href="#images-dir" aria-label="Permalink to &quot;Images dir&quot;">​</a></h2><p>Images directory for locally hosted images.</p><ul><li>object-path: <code>local.images</code></li><li>dotenv var: <code>FS_IMAGES</code></li><li>type: <code>string</code></li><li>default: <code>&#39;storage/images&#39;</code></li></ul><h2 id="url-expiration" tabindex="-1">URL Expiration <a class="header-anchor" href="#url-expiration" aria-label="Permalink to &quot;URL Expiration&quot;">​</a></h2><p>Expiration of URLs for generated files. Defined as <code>ms-formatted</code>string, see <a href="https://github.com/vercel/ms" target="_blank" rel="noreferrer">ms</a> for more information.</p><ul><li>object-path: <code>urlExpiresAt</code></li><li>type: <code>string</code></li><li>default: <code>&#39;2d&#39;</code></li></ul>',17)]))}const h=o(d,[["render",t]]);export{f as __pageData,h as default};
