import{_ as e,c as a,o as n,a as s}from"./app.7092d291.js";const m='{"title":"Introduction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Header format","slug":"header-format"},{"level":2,"title":"Example request","slug":"example-request"},{"level":3,"title":"Request","slug":"request"},{"level":3,"title":"Response","slug":"response"}],"relativePath":"api/index.md"}',t={},r=s(`<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h1><p>REST-based API endpoints use:</p><ul><li>mostly in <code>application/json</code> content-type</li><li>file-based endpoints use <code>multipart/form-data</code> content type</li></ul><h1 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h1><p>Protected endpoints require to supply access token (obtained during login) in <code>Authorization</code> http header.</p><h2 id="header-format" tabindex="-1">Header format <a class="header-anchor" href="#header-format" aria-hidden="true">#</a></h2><div class="language-"><pre><code>Authorization: Bearer {accessToken}
</code></pre></div><h2 id="example-request" tabindex="-1">Example request <a class="header-anchor" href="#example-request" aria-hidden="true">#</a></h2><h3 id="request" tabindex="-1">Request <a class="header-anchor" href="#request" aria-hidden="true">#</a></h3><div class="language-http"><pre><code>GET /api/endpoint

<span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer {accessToken}</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
</code></pre></div><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-hidden="true">#</a></h3><div class="language-json"><pre><code><span class="token number">200</span> OK

<span class="token punctuation">{</span>
    ...
<span class="token punctuation">}</span>
</code></pre></div>`,12),o=[r];function d(i,c,p,l,h,u){return n(),a("div",null,o)}var f=e(t,[["render",d]]);export{m as __pageData,f as default};
