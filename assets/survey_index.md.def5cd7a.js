import{_ as e,c as r,o as a,a as t}from"./app.bf074fe8.js";const l="/assets/i24-recall-user-flow.f0e46ae0.png",_=JSON.parse('{"title":"Survey (Recall)","description":"","frontmatter":{},"headers":[{"level":2,"title":"User flow","slug":"user-flow","link":"#user-flow","children":[]},{"level":2,"title":"Custom recall flow","slug":"custom-recall-flow","link":"#custom-recall-flow","children":[{"level":3,"title":"Prompts","slug":"prompts","link":"#prompts","children":[]},{"level":3,"title":"Source","slug":"source","link":"#source","children":[]},{"level":3,"title":"Layout","slug":"layout","link":"#layout","children":[]}]}],"relativePath":"survey/index.md"}'),s={name:"survey/index.md"},o=t('<h1 id="survey-recall" tabindex="-1">Survey (Recall) <a class="header-anchor" href="#survey-recall" aria-hidden="true">#</a></h1><p>Built with Vue.js.</p><h2 id="user-flow" tabindex="-1">User flow <a class="header-anchor" href="#user-flow" aria-hidden="true">#</a></h2><p><img src="'+l+'" alt="User Flow"> This is currently hosted on Miro (TF&#39;s account), will migrate here if useful: <a href="https://miro.com/app/board/o9J_kpEZdcc=/" target="_blank" rel="noreferrer">view interactive user flow</a></p><h2 id="custom-recall-flow" tabindex="-1">Custom recall flow <a class="header-anchor" href="#custom-recall-flow" aria-hidden="true">#</a></h2><p>There is a number of places in the user flow where custom questions can be inserted. Custom questions are added to the <em>scheme</em>. They can be inserted at the following points in the user flow:</p><ul><li>Pre-meal</li><li>Post-meal</li><li>Submission (before submission)</li><li>Pre-foods</li><li>Foods (during food selection)</li><li>Post-foods</li></ul><p>Further details about the custom recall flow can be see in the <a href="./../admin/#custom-recall-questions">Admin documentation</a>.</p><h3 id="prompts" tabindex="-1">Prompts <a class="header-anchor" href="#prompts" aria-hidden="true">#</a></h3><p>These are defined as types, loaded as components (mapped into <code>Recall.vue</code>). Rendered using Vue <code>component</code>, with a type handed dynamically using :is.</p><h3 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-hidden="true">#</a></h3><p><a href="https://github.com/MRC-Epid-it24/intake24/tree/master/apps/survey" target="_blank" rel="noreferrer">Github</a></p><h3 id="layout" tabindex="-1">Layout <a class="header-anchor" href="#layout" aria-hidden="true">#</a></h3><p>Grid system uses <a href="https://dev.vuetifyjs.com" target="_blank" rel="noreferrer">Vuetify</a></p>',14),i=[o];function n(c,d,u,h,p,f){return a(),r("div",null,i)}const w=e(s,[["render",n]]);export{_ as __pageData,w as default};
