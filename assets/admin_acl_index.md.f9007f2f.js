import{_ as e,c as s,o,a as r}from"./app.954531fb.js";const y='{"title":"Introduction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Database structure","slug":"database-structure"},{"level":2,"title":"Resource permissions","slug":"resource-permissions"},{"level":2,"title":"Special purpose permissions","slug":"special-purpose-permissions"}],"relativePath":"admin/acl/index.md"}',t={},i=r('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h1><p>Access control list (<code>ACL</code>) implementation is based on three models:</p><ul><li><code>user</code></li><li><code>role</code></li><li><code>permission</code></li></ul><h2 id="database-structure" tabindex="-1">Database structure <a class="header-anchor" href="#database-structure" aria-hidden="true">#</a></h2><p>Relations between the models are defined as follows:</p><ul><li><code>many-to-many</code> between <code>user</code> and <code>role</code></li><li><code>many-to-many</code> between <code>user</code> and <code>permission</code></li><li><code>many-to-many</code> between <code>role</code> and <code>permission</code></li></ul><p>This allows to grant permissions to users in two ways:</p><ul><li>directly associate <code>permission</code> with <code>user</code></li><li>associate <code>permission</code> with <code>user</code> through <code>role</code> (acting as grouping record for a set of permissions)</li></ul><p>Permissions need to be implemented on system-level and are usually distributed as database migration. Under normal circumstances, user won&#39;t need to create / modify / delete permission list.</p><h2 id="resource-permissions" tabindex="-1">Resource permissions <a class="header-anchor" href="#resource-permissions" aria-hidden="true">#</a></h2><p>Permissions are resource-based and use <code>slug</code> naming convention. It is formed from resource name and action. Base actions are <code>browse</code>, <code>read</code>, <code>create</code>, <code>edit</code>, <code>delete</code>. Other resource-specific actions follows similar convention.</p><table><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td>resource-browse</td><td>Allows to browse / list resource records</td></tr><tr><td>resource-read</td><td>Allows to read details about the resource record</td></tr><tr><td>resource-create</td><td>Allows to create new resource record</td></tr><tr><td>resource-edit</td><td>Allows to modify existing resource record</td></tr><tr><td>resource-delete</td><td>Allows to delete existing resource record</td></tr><tr><td>resource-action</td><td>Allows to perform specific action for resource record</td></tr></tbody></table><h2 id="special-purpose-permissions" tabindex="-1">Special purpose permissions <a class="header-anchor" href="#special-purpose-permissions" aria-hidden="true">#</a></h2><p>Current Intake24 ACL system also implements couple of V3-based specific permissions.</p><ul><li><p><code>surveyadmin</code> - grants access to all survey records</p></li><li><p><code>${surveyId}/respondent</code> - grants user respondent access to specific survey based on the <code>surveyId</code>, which is incorporated into permission name. Permission is automatically created when new survey record is created. <code>Survey Respondent</code> page allows to assign permission directly selected user. Whenever respondent record is created either using Admin UI or importing CSV file, this permission is attached directly to user.</p></li><li><p><code>${surveyId}/staff</code> - grants access to specific survey record based on the <code>surveyId</code>, which is incorporated into permission name. Permission is automatically created when new survey record is created. Survey Management page allows to assign permission directly selected user.</p></li><li><p><code>${surveyId}/support</code> - nominates user to receive survey&#39;s respondents help request based on the <code>surveyId</code>, which is incorporated into permission name. Permission is automatically created when new survey record is created. Survey Management page allows to assign permission directly selected user.</p></li><li><p><code>foodsadmin</code> - grants access to all food databases / food list records</p></li><li><p><code>fdbm/${localeId}</code> - grants access to specific food list record based on the <code>localeId</code>, which is incorporated into permission name. Permission is automatically created when new survey record is created.</p></li><li><p><code>globalsupport</code> - nominates user to receive respondents help request from all surveys.</p></li></ul>',15),d=[i];function c(a,n,l,u,p,m){return o(),s("div",null,d)}var f=e(t,[["render",c]]);export{y as __pageData,f as default};
