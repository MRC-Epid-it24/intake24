import{_ as e,o as a,c as t,S as i}from"./chunks/framework.73d05564.js";const v=JSON.parse('{"title":"Services","description":"","frontmatter":{},"headers":[],"relativePath":"config/api/services.md","filePath":"config/api/services.md"}'),o={name:"config/api/services.md"},c=i('<h1 id="services" tabindex="-1">Services <a class="header-anchor" href="#services" aria-label="Permalink to &quot;Services&quot;">​</a></h1><p>Path: <code>apps/api/src/config/services.ts</code></p><h2 id="captcha" tabindex="-1">CAPTCHA <a class="header-anchor" href="#captcha" aria-label="Permalink to &quot;CAPTCHA&quot;">​</a></h2><p>Password recovery and user generation can be protected by captcha services.</p><p>Implemented providers:</p><ul><li><a href="https://hcaptcha.com" target="_blank" rel="noreferrer">hCAPTCHA</a></li><li><a href="https://developers.google.com/recaptcha/intro" target="_blank" rel="noreferrer">Google reCAPTCHA</a></li></ul><p>V2 (invisible) version is currently implemented.</p><h3 id="provider" tabindex="-1">Provider <a class="header-anchor" href="#provider" aria-label="Permalink to &quot;Provider&quot;">​</a></h3><p>Captcha provider to use. Captcha will be disabled if left empty.</p><ul><li>object-path: <code>captcha.provider</code></li><li>dotenv var: <code>CAPTCHA_PROVIDER</code></li><li>type: <code>h-captcha | re-captcha</code></li><li>default: <code>&#39;&#39;</code></li></ul><h3 id="secret-key" tabindex="-1">Secret key <a class="header-anchor" href="#secret-key" aria-label="Permalink to &quot;Secret key&quot;">​</a></h3><ul><li>object-path: <code>captcha.secret</code></li><li>dotenv var: <code>CAPTCHA_SECRET</code></li><li>type: <code>string</code></li><li>default: <code>&#39;&#39;</code></li></ul><h2 id="web-push" tabindex="-1">Web-push <a class="header-anchor" href="#web-push" aria-label="Permalink to &quot;Web-push&quot;">​</a></h2><p>Provides web-push functionality for supported browsers.</p><p>To enable the functionality, VAPID keys has to be generated.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">web-push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">generate-vapid-keys</span></span></code></pre></div><h3 id="subject" tabindex="-1">Subject <a class="header-anchor" href="#subject" aria-label="Permalink to &quot;Subject&quot;">​</a></h3><ul><li>object-path: <code>webPush.subject</code></li><li>dotenv var: <code>WEBPUSH_SUBJECT</code></li><li>type: <code>string</code></li><li>default: <code>&#39;&#39;</code></li></ul><h3 id="vapid-public-key" tabindex="-1">VAPID public key <a class="header-anchor" href="#vapid-public-key" aria-label="Permalink to &quot;VAPID public key&quot;">​</a></h3><ul><li>object-path: <code>webPush.publicKey</code></li><li>dotenv var: <code>WEBPUSH_PUBLIC_KEY</code></li><li>type: <code>string</code></li><li>default: <code>&#39;&#39;</code></li></ul><h3 id="vapid-private-key" tabindex="-1">VAPID private key <a class="header-anchor" href="#vapid-private-key" aria-label="Permalink to &quot;VAPID private key&quot;">​</a></h3><ul><li>object-path: <code>webPush.privateKey</code></li><li>dotenv var: <code>WEBPUSH_PRIVATE_KEY</code></li><li>type: <code>string</code></li><li>default: <code>&#39;&#39;</code></li></ul>',22),r=[c];function l(s,d,p,n,h,u){return a(),t("div",null,r)}const P=e(o,[["render",l]]);export{v as __pageData,P as default};
