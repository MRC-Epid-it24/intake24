import{_ as e,c as a,o,a3 as t}from"./chunks/framework.9Buaa5aL.js";const g=JSON.parse('{"title":"Import food data from a portable format","description":"","frontmatter":{},"headers":[],"relativePath":"cli/import-package.md","filePath":"cli/import-package.md"}'),l={name:"cli/import-package.md"},i=t('<h1 id="import-food-data-from-a-portable-format" tabindex="-1">Import food data from a portable format <a class="header-anchor" href="#import-food-data-from-a-portable-format" aria-label="Permalink to &quot;Import food data from a portable format&quot;">​</a></h1><p>This command allows to import a new locale/images/nutrient table from the pre-defined portable format (archived folder). The exact format can be supplied upon request</p><h2 id="available-options" tabindex="-1">Available options: <a class="header-anchor" href="#available-options" aria-label="Permalink to &quot;Available options:&quot;">​</a></h2><ul><li><code>-c</code>, <code>--on-conflict</code> - How importer should handle the conflicts. Options: <ul><li>skip</li><li>overwrite</li><li>abort</li></ul></li><li><code>-m</code>, <code>--modules-for-execution</code> - What steps/modules importer should execute. Options: <ul><li>&#39;enabled-local-foods&#39;</li><li>images-as-served,</li><li>locales,</li><li>nutrients,</li><li>global-foods,</li><li>local-foods,</li><li>enabled-local-foods,</li><li>all <strong>[Default if not chosen otherwise]</strong>.</li></ul></li><li><code>&lt;version&gt;</code> - Intake24 API version to use. Values: <strong>v3</strong>, <strong>v4</strong></li><li><code>&lt;package-file&gt;</code> - Input package file path</li></ul><p><strong>Do not use all in combination with other modules</strong></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="executing-all-modules" tabindex="-1">Executing all modules <a class="header-anchor" href="#executing-all-modules" aria-label="Permalink to &quot;Executing all modules&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm run cli import-package -c overwrite -m all v4 /path/to/the/archived/ARCHIVED_FOLDER.zip</span></span></code></pre></div><h3 id="executing-multiple-modules" tabindex="-1">Executing multiple modules <a class="header-anchor" href="#executing-multiple-modules" aria-label="Permalink to &quot;Executing multiple modules&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm run cli import-package -c overwrite -m locales nutrients v4 /path/to/the/archived/ARCHIVED_FOLDER.zip</span></span></code></pre></div><h3 id="executing-one-module" tabindex="-1">Executing one module <a class="header-anchor" href="#executing-one-module" aria-label="Permalink to &quot;Executing one module&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm run cli import-package -c overwrite -m enabled-local-foods v4 /path/to/the/archived/ARCHIVED_FOLDER.zip</span></span></code></pre></div>',12),s=[i];function n(r,c,p,d,u,m){return o(),a("div",null,s)}const f=e(l,[["render",n]]);export{g as __pageData,f as default};
