import{_ as a,c as s,o as n,a as e}from"./app.0ca1352a.js";const D=JSON.parse('{"title":"Languages","description":"","frontmatter":{},"headers":[{"level":2,"title":"Detail","slug":"detail","link":"#detail","children":[]},{"level":2,"title":"Create / Edit","slug":"create-edit","link":"#create-edit","children":[]},{"level":2,"title":"Translations","slug":"translations","link":"#translations","children":[{"level":3,"title":"Source code translations","slug":"source-code-translations","link":"#source-code-translations","children":[]},{"level":3,"title":"Database translations","slug":"database-translations","link":"#database-translations","children":[]},{"level":3,"title":"Priority resolution","slug":"priority-resolution","link":"#priority-resolution","children":[]},{"level":3,"title":"Translations synchronization","slug":"translations-synchronization","link":"#translations-synchronization","children":[]}]},{"level":2,"title":"Deletion","slug":"deletion","link":"#deletion","children":[]}],"relativePath":"admin/localization/languages.md"}'),l={name:"admin/localization/languages.md"},o=e(`<h1 id="languages" tabindex="-1">Languages <a class="header-anchor" href="#languages" aria-hidden="true">#</a></h1><p>Intake24 bundles English texts by default. Additional languages can be added to source code and bundled during build or added to database. See <a href="/admin/localization/languages.html#translations">Translations</a> for more details.</p><p>Languages are then associated with locales and they are displayed as a list of available languages in frontend UI (<code>admin tool</code> or <code>survey recall</code>).</p><h2 id="detail" tabindex="-1">Detail <a class="header-anchor" href="#detail" aria-hidden="true">#</a></h2><p>Detail tab displays selected language info.</p><h2 id="create-edit" tabindex="-1">Create / Edit <a class="header-anchor" href="#create-edit" aria-hidden="true">#</a></h2><p>Edit tab allows to modify selected language.</p><ul><li><p><code>Language ID</code> - valid locale ID and unique string within <code>language</code> records</p></li><li><p><code>Country flag code</code> - Country code to select correct flag</p></li><li><p><code>English name</code> - English name of the language (e.g. Czech)</p></li><li><p><code>Local name</code> - Local name of the language (e.g. Čeština)</p></li><li><p><code>Text direction</code> - Read / write direction of text. Valid options are <code>ltr</code> or <code>rlt</code></p></li></ul><h2 id="translations" tabindex="-1">Translations <a class="header-anchor" href="#translations" aria-hidden="true">#</a></h2><p>When new language record is created, language will be included in in both <code>admin</code> and <code>survey</code> profile language selection. However, translation needs to be provided firstly.</p><p>Language translations can be managed on two levels:</p><ol><li>Source code</li><li>Database records</li></ol><h3 id="source-code-translations" tabindex="-1">Source code translations <a class="header-anchor" href="#source-code-translations" aria-hidden="true">#</a></h3><p>Application translations are default built-in files in source code and <code>en</code> (English) files should treated as templates.</p><p>Translations are located in <code>packages/i18n/src</code>.</p><p>They are structured based on components (<code>admin</code>, <code>api</code>, <code>survey</code>) with addition of <code>shared</code> including shared translations between each components.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">packages/i18n/src</span></span>
<span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ admin -&gt; Admin client translations</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ en -&gt; English files</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ ... -&gt; other language files</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ api -&gt; API Server translations</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ en -&gt; English files</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ ... -&gt; other language files</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ shared -&gt; Shared translations used for all application</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ en -&gt; English files</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ ... -&gt; other language files</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ survey -&gt; Survey client translations</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ en -&gt; English files</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ ... -&gt; other language files</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="adding-new-language-translations-in-source-code" tabindex="-1">Adding new language translations in source code <a class="header-anchor" href="#adding-new-language-translations-in-source-code" aria-hidden="true">#</a></h4><p>Copy <code>en</code> folder in each section and rename to valid <code>locale</code> code.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/i18n/src/{section}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">en</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cs</span></span>
<span class="line"></span></code></pre></div><p>Modify <code>index.ts</code> to include the locale</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> en </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./en</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> cs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./cs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> messages</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LocaleMessages</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> en </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> messages</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LocaleMessages</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> en</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cs </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h3 id="database-translations" tabindex="-1">Database translations <a class="header-anchor" href="#database-translations" aria-hidden="true">#</a></h3><p>When new language is created, <code>translations</code> tab allows to manage database translation for particular file. Click on <code>plus</code> button in <code>translations</code> section of newly created language record will initialize database set of translations. (It takes a copy of default built-in <code>English</code> set and saves it to database).</p><p>Then, <code>translations</code> tab will show a list of <code>application - section</code> records, which contains <code>key -&gt; value</code> translations. These can now be modified / localized to desired language.</p><h3 id="priority-resolution" tabindex="-1">Priority resolution <a class="header-anchor" href="#priority-resolution" aria-hidden="true">#</a></h3><p>Language translations are resolved in following priority:</p><ol><li>Database translations (<code>cs</code>)</li><li>Source code translations (<code>cs</code>)</li><li>Fallback database translations (<code>en</code>)</li><li>Fallback source code translations (<code>en</code>)</li></ol><p>When user visits frontend application or manually changes language in user profile, it fetches available languages from server, so they get updated translations</p><h3 id="translations-synchronization" tabindex="-1">Translations synchronization <a class="header-anchor" href="#translations-synchronization" aria-hidden="true">#</a></h3><p>When source code translation files gets updates, structure can be changed when adding / editing / deleting keys. Therefore, database translations has to synchronized.</p><p>In <code>translations</code> section, there is a <code>synchronization</code> button on top of the list of translations, which triggers the synchronization for particular file.</p><p>Also there a system-level job <code>SyncLanguageTranslations</code> that can be triggered to update all language translations to up-to-date structure.</p><div class="warning custom-block"><p class="custom-block-title">Built-in translations updates</p><p>Updating structure of database translations can potentially result in data loss in following predictable way.</p><p>Source code translation files are simple <code>js</code> object literals. See below example of when original built-in key <code>section</code> was simple string and new translation got expanded and became object of strings. Then, this new object is taken and original string removed -&gt; this <code>section</code> string translation then gets discarded and new object with all its keys (and default English values) needs to be translated.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// original translation</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">section</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Section</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// new translation</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">section</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Section</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">content</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="deletion" tabindex="-1">Deletion <a class="header-anchor" href="#deletion" aria-hidden="true">#</a></h2><p>Language deletion won&#39;t be permitted if there are locales using it. User firstly needs to update the locales to use different language.</p>`,36),t=[o];function i(c,p,r,d,y,g){return n(),s("div",null,t)}const u=a(l,[["render",i]]);export{D as __pageData,u as default};
