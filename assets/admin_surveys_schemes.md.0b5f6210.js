import{_ as e,c as t,o as d,a as i}from"./app.9f8fc7e3.js";const b='{"title":"Schemes","description":"","frontmatter":{},"headers":[{"level":2,"title":"Detail tab","slug":"detail-tab"},{"level":2,"title":"Create / Edit tab","slug":"create-edit-tab"},{"level":2,"title":"Questions tab","slug":"questions-tab"},{"level":2,"title":"Question editor","slug":"question-editor"},{"level":2,"title":"Data export tab","slug":"data-export-tab"}],"relativePath":"admin/surveys/schemes.md","lastUpdated":1642446691822}',a={},o=i('<h1 id="schemes" tabindex="-1">Schemes <a class="header-anchor" href="#schemes" aria-hidden="true">#</a></h1><p>Survey recall flow is defined by scheme, which has couple of sections.</p><h2 id="detail-tab" tabindex="-1">Detail tab <a class="header-anchor" href="#detail-tab" aria-hidden="true">#</a></h2><p>Detail tab displays selected scheme info.</p><h2 id="create-edit-tab" tabindex="-1">Create / Edit tab <a class="header-anchor" href="#create-edit-tab" aria-hidden="true">#</a></h2><p>Edit tab allows to modify selected scheme.</p><ul><li><p><code>Scheme ID</code> - short and unique, ideally slug-based string. It is used as primary key in database.</p></li><li><p><code>Scheme name</code> - user friendly name for admin purposes</p></li><li><p><code>Scheme type</code> - placeholder at the moment for future to allow to define various types of schemes.</p></li><li><p><code>Default meals</code> - list of predefined meals that will appear at the start of the recall. It allows to:</p><ul><li>create new meals with default time and localized name</li><li>remove meals</li><li>load whole meal list from different scheme</li><li>reset the list to default one</li></ul></li></ul><h2 id="questions-tab" tabindex="-1">Questions tab <a class="header-anchor" href="#questions-tab" aria-hidden="true">#</a></h2><p>Questions tab allows to design dietary survey recall flow and define details about each question asked.</p><p>Questions are categorized to sections and they are asked in specified fixed order. See table below.</p><h4 id="recall-sections" tabindex="-1">Recall sections <a class="header-anchor" href="#recall-sections" aria-hidden="true">#</a></h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>1. Pre-meal</td><td>Questions asked about whole recall before dietary data entered</td></tr><tr><td>2. Pre-foods</td><td>Questions asked about meal before foods were entered</td></tr><tr><td>3. Foods</td><td>Questions asked about the foods</td></tr><tr><td>4. Post-foods</td><td>Questions asked about meal after foods were entered</td></tr><tr><td>5. Post-meal</td><td>Questions asked about whole recall after dietary data</td></tr><tr><td>6. Submission</td><td>Questions asked during data submissions</td></tr></tbody></table><p>Whole question sections group can be loaded from another scheme using <code>load from scheme</code> button.</p><p>When question section is selected, list of questions appear below:</p><ul><li>new questions can be added</li><li>questions can be removed</li><li>list of questions can be re-arranged by drag &amp; drop</li><li>question can be loaded from <code>template</code> defined in <code>scheme questions</code> section.</li><li>question can be saved as <code>template</code> if it doesn&#39;t exist yet (determined by unique <code>question id</code>)</li><li>question&#39;s settings can be synced from <code>template</code> if it exists (determined by unique <code>question id</code>).</li></ul><h2 id="question-editor" tabindex="-1">Question editor <a class="header-anchor" href="#question-editor" aria-hidden="true">#</a></h2><p>Full screen modal opens when create or edit action triggered.</p><p>Top level toolbar has:</p><ul><li>cancel button on the left - changes are discarded</li><li>confirm button on the right - changes are confirmed, but not yet saved to server&#39;s database</li><li>tab list with: <ul><li><code>general</code> - defines type &amp; id &amp; name of question for administrative purposes</li><li><code>content</code> - defines localized content, which appears to user</li><li><code>conditions</code> - list of conditions to be met so question is displayed</li><li><code>validation</code> - defines validation options, e.g. if question is optional or required</li><li><code>options</code> - defines list of options for <code>list-based</code> question types like <code>checkbox</code> or <code>radio</code> lists</li></ul></li></ul><h4 id="general-tab" tabindex="-1">General tab <a class="header-anchor" href="#general-tab" aria-hidden="true">#</a></h4><p>General tab defines administrative fields</p><ul><li><code>question type</code> - type of question that is asked. Questions are further categorized to <code>custom</code>, <code>standard</code> and <code>portion size</code> groups.</li><li><code>question id</code> - ID assigned to question, which must be unique within the question list.</li><li><code>question name</code> - user friendly name for better orientation. It&#39;s only for admin use, it is not displayed to respondent</li></ul><h4 id="content-tab" tabindex="-1">Content tab <a class="header-anchor" href="#content-tab" aria-hidden="true">#</a></h4><p>Content tab defines respondent facing content</p><ul><li><code>question name</code> - very short question name, used to be displayed in frontend UI breadcrumb component</li><li><code>question text</code> - main question text to be asked</li><li><code>question name</code> - any question details, allows to embed <code>html</code> content</li></ul><p>All three fields can be localized to various languages</p><h2 id="data-export-tab" tabindex="-1">Data export tab <a class="header-anchor" href="#data-export-tab" aria-hidden="true">#</a></h2><p>Data export tab allows to define fields, which will get exported to flattened CSV file having <code>food-per-row</code> with all additional fields.</p><p>There is a fixed list of possible data export sections</p><h4 id="sections" tabindex="-1">Sections <a class="header-anchor" href="#sections" aria-hidden="true">#</a></h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>User record fields</td><td></td></tr><tr><td>User custom fields</td><td></td></tr><tr><td>Survey record fields</td><td></td></tr><tr><td>Survey custom fields</td><td></td></tr><tr><td>Meal record fields</td><td></td></tr><tr><td>Meal custom fields</td><td></td></tr><tr><td>Food record fields</td><td></td></tr><tr><td>Food custom fields</td><td></td></tr><tr><td>Food composition fields</td><td></td></tr><tr><td>Food nutrient fields</td><td></td></tr><tr><td>Portion size fields</td><td></td></tr></tbody></table><p>Sections can be re-arranged by drag &amp; drop and they will appear accordingly in export file.</p><p>Each section can be edited. Screen is divided in half to show included fields on left and available fields for inclusion on right. <code>Field name</code> can be modified and will get used as column header in export file.</p>',33),s=[o];function l(r,n,c,h,u,p){return d(),t("div",null,s)}var m=e(a,[["render",l]]);export{b as __pageData,m as default};
