import{_ as e,c as t,o as d,a as i}from"./app.9c6710a1.js";const m=JSON.parse('{"title":"Survey schemes","description":"","frontmatter":{},"headers":[{"level":2,"title":"Detail","slug":"detail","link":"#detail","children":[]},{"level":2,"title":"Create / Edit","slug":"create-edit","link":"#create-edit","children":[]},{"level":2,"title":"Questions","slug":"questions","link":"#questions","children":[{"level":3,"title":"Recall sections","slug":"recall-sections","link":"#recall-sections","children":[]}]},{"level":2,"title":"Data export","slug":"data-export","link":"#data-export","children":[{"level":3,"title":"Sections","slug":"sections","link":"#sections","children":[]}]}],"relativePath":"admin/surveys/schemes.md"}'),a={name:"admin/surveys/schemes.md"},s=i('<h1 id="survey-schemes" tabindex="-1">Survey schemes <a class="header-anchor" href="#survey-schemes" aria-hidden="true">#</a></h1><p>Survey recall flow is defined by scheme, which has couple of sections.</p><h2 id="detail" tabindex="-1">Detail <a class="header-anchor" href="#detail" aria-hidden="true">#</a></h2><p>Detail tab displays selected survey scheme info.</p><h2 id="create-edit" tabindex="-1">Create / Edit <a class="header-anchor" href="#create-edit" aria-hidden="true">#</a></h2><p>Edit tab allows to modify selected survey scheme.</p><ul><li><p><code>Name</code> - <code>survey-scheme-wide</code> unique name</p></li><li><p><code>Type</code> - Placeholder at the moment for future to allow to define various types of survey schemes</p></li><li><p><code>Default meals</code> - List of predefined meals that will appear at the start of the recall.</p><ul><li>It allows to: <ul><li>Create new meals with default time and localized name</li><li>Remove meals</li><li>Load whole meal list from different scheme</li><li>Reset the list to default one</li></ul></li></ul></li></ul><h2 id="questions" tabindex="-1">Questions <a class="header-anchor" href="#questions" aria-hidden="true">#</a></h2><p>Questions tab allows to design dietary survey recall flow and define details about each question asked.</p><p>Questions are categorized to sections and they are asked in specified fixed order. See table below.</p><h3 id="recall-sections" tabindex="-1">Recall sections <a class="header-anchor" href="#recall-sections" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>1. Pre-meal</td><td>Questions asked about whole recall before dietary data entered</td></tr><tr><td>2. Pre-foods</td><td>Questions asked about meal before foods were entered</td></tr><tr><td>3. Foods</td><td>Questions asked about the foods</td></tr><tr><td>4. Post-foods</td><td>Questions asked about meal after foods were entered</td></tr><tr><td>5. Post-meal</td><td>Questions asked about whole recall after dietary data</td></tr><tr><td>6. Submission</td><td>Questions asked during data submissions</td></tr></tbody></table><p>Whole question sections group can be loaded from another scheme using <code>load from scheme</code> button.</p><p>When question section is selected, list of questions appear below:</p><ul><li>New questions can be added</li><li>Questions can be removed</li><li>List of questions can be re-arranged by drag &amp; drop</li><li>Question can be loaded from <code>template</code> defined in <code>scheme questions</code> section</li><li>Question can be saved as <code>template</code> if it doesn&#39;t exist yet (determined by unique <code>question id</code>)</li><li>Question&#39;s settings can be synced from <code>template</code> if it exists (determined by unique <code>question id</code>)</li></ul><h2 id="data-export" tabindex="-1">Data export <a class="header-anchor" href="#data-export" aria-hidden="true">#</a></h2><p>Data export tab allows to define fields, which will get exported to flattened CSV file having <code>food-per-row</code> with all additional fields.</p><p>There is a fixed list of possible data export sections</p><h3 id="sections" tabindex="-1">Sections <a class="header-anchor" href="#sections" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>User record fields</td><td></td></tr><tr><td>User custom fields</td><td></td></tr><tr><td>Survey record fields</td><td></td></tr><tr><td>Survey custom fields</td><td></td></tr><tr><td>Meal record fields</td><td></td></tr><tr><td>Meal custom fields</td><td></td></tr><tr><td>Food record fields</td><td></td></tr><tr><td>Food custom fields</td><td></td></tr><tr><td>Food composition fields</td><td></td></tr><tr><td>Food nutrient fields</td><td></td></tr><tr><td>Portion size fields</td><td></td></tr></tbody></table><p>Sections can be re-arranged by drag &amp; drop and they will appear accordingly in export file.</p><p>Each section can be edited. Screen is divided in half to show included fields on left and available fields for inclusion on right. <code>Field name</code> can be modified and will get used as column header in export file.</p>',22),o=[s];function l(r,n,c,h,u,f){return d(),t("div",null,o)}const b=e(a,[["render",l]]);export{m as __pageData,b as default};
