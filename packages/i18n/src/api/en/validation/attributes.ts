import type { LocaleMessageObject } from 'vue-i18n';

const attributes: LocaleMessageObject = {
  actions: 'Actions',
  active: 'Active',
  allowGenUsers: 'Allow generate users',
  app: 'Application',
  adminLanguageId: 'Admin language ID',
  authUrlDomainOverride: 'Authentication URL domain override',
  authUrlTokenCharset: 'Authentication URL token charset',
  authUrlTokenLength: 'Authentication URL token length',
  baseImage: 'Base image',
  birthdate: 'Birth date',
  captcha: 'CAPTCHA',
  countryFlagCode: 'Country flag code',
  code: 'Code',
  copy: 'Copy',
  cron: 'CRON',
  csvMapping: {
    rowOffset: 'Row offset',
    idColumnOffset: 'ID column offset',
    descriptionColumnOffset: 'Description column offset',
    localDescriptionColumnOffset: 'Local description column offset',
  },
  csvMappingFields: 'Field column mappings',
  csvMappingNutrients: 'Nutrient column mappings',
  customFields: 'Custom fields',
  dataExport: 'Data export',
  demographicGroups: 'Demographic groups',
  description: 'Description',
  displayName: 'Display name',
  endDate: 'End date',
  email: 'Email',
  emailConfirm: 'Confirm email',
  emailNotifications: 'Email notifications',
  englishName: 'English name',
  feedbackSchemeId: 'Feedback scheme ID',
  file: 'File',
  genUserKey: 'Generate user key',
  guideImageId: 'Guide image ID',
  heightCm: 'Height',
  henryCoefficients: 'Henry coefficients',
  id: 'ID',
  imageMapId: 'Image map ID',
  images: 'Images',
  job: 'Job',
  languageId: 'Language ID',
  localeId: 'Locale ID',
  limit: 'Limit',
  localName: 'Local name',
  main: {
    attributes: {
      readyMealOption: 'Ready meal option',
      reasonableAmount: 'Reasonable amount',
      sameAsBeforeOption: 'Same as before option',
      useInRecipes: 'Use in recipes',
    },
    code: 'Global code',
    foodGroupId: 'Food group ID',
    isHidden: 'Is hidden',
    name: 'Global name',
    parentCategories: 'Parent categories',
  },
  maximumDailySubmissions: 'Maximum daily submissions',
  maximumTotalSubmissions: 'Maximum total submissions',
  minimumSubmissionInterval: 'Minimum submission interval',
  meals: 'Meals',
  multiFactorAuthentication: 'Multi-factor authentication',
  name: 'Name',
  numberOfSubmissionsForFeedback: 'Number of submissions for feedback',
  nutrientRecords: 'Nutrient records',
  objects: 'Objects',
  outputs: 'Outputs',
  ownerId: 'Owner ID',
  page: 'Page',
  password: 'Password',
  passwordConfirm: 'Password confirmation',
  params: 'Parameters',
  permissions: 'Permissions',
  phone: 'Phone',
  physicalActivityLevelId: 'Physical activity level',
  physicalDataFields: 'Physical data fields',
  prototypeLocaleId: 'Prototype locale ID',
  question: 'Question',
  questions: 'Questions',
  respondentLanguageId: 'Respondent language ID',
  roles: 'Roles',
  sessionData: 'Session data',
  search: 'Search',
  searchSortingAlgorithm: 'Search sorting algorithm',
  searchMatchScoreWeight: 'Search match score weight',
  section: 'Section',
  selectionImage: 'Selection image',
  sex: 'Sex',
  slug: 'Slug',
  smsNotifications: 'SMS notifications',
  sort: 'Sort',
  startDate: 'Start date',
  state: 'State',
  submissions: 'Submissions',
  submissionNotificationUrl: 'Submission notification URL',
  supportEmail: 'Support email',
  survey: 'Survey',
  surveySchemeId: 'Survey scheme ID',
  surveySchemeOverrides: 'Survey scheme overrides',
  suspensionReason: 'Suspension reason',
  storeUserSessionOnServer: 'Store user session on server',
  textDirection: 'Text direction',
  terms: 'Terms',
  token: 'Token',
  topFoods: {
    max: 'Max number of foods',
    colors: 'Colors',
    nutrientTypes: 'Nutrient types',
  },
  translations: 'Translations',
  type: 'Type',
  tzOffset: 'Timezone offset',
  userId: 'User ID',
  userPersonalIdentifiers: 'User personal identifiers',
  userCustomFields: 'User custom fields',
  username: 'Username',
  weight: 'Weight',
  weightKg: 'Weight',
  weightTarget: 'Weight target',
};

export default attributes;
