/* tslint:disable */
// generated by typescript-json-validator
import { inspect } from 'util';
import Ajv = require('ajv');
import { ExportSections } from '../../types/models/system/schemes';
export const ajv = new Ajv({
  allErrors: true,
  coerceTypes: false,
  format: 'fast',
  nullable: true,
  unicode: true,
  uniqueItems: true,
  useDefaults: true,
});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export { ExportSections };
export const ExportSectionsSchema = {
  $schema: 'http://json-schema.org/draft-07/schema#',
  definitions: {
    ExportSectionId: {
      enum: [
        'food',
        'foodCustom',
        'foodFields',
        'foodNutrients',
        'meal',
        'mealCustom',
        'portionSizes',
        'survey',
        'surveyCustom',
        'user',
        'userCustom',
      ],
      type: 'string',
    },
  },
  items: {
    additionalProperties: false,
    defaultProperties: [],
    properties: {
      fields: {
        items: {
          additionalProperties: false,
          defaultProperties: [],
          properties: {
            id: {
              type: 'string',
            },
            label: {
              type: 'string',
            },
          },
          required: ['id', 'label'],
          type: 'object',
        },
        type: 'array',
      },
      id: {
        $ref: '#/definitions/ExportSectionId',
      },
    },
    required: ['fields', 'id'],
    type: 'object',
  },
  type: 'array',
};
export type ValidateFunction<T> = ((data: unknown) => data is T) &
  Pick<Ajv.ValidateFunction, 'errors'>;
export const isExportSections = ajv.compile(
  ExportSectionsSchema
) as ValidateFunction<ExportSections>;
export default function validate(value: unknown): ExportSections {
  if (isExportSections(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(
        isExportSections.errors!.filter((e: any) => e.keyword !== 'if'),
        { dataVar: 'ExportSections' }
      ) +
        '\n\n' +
        inspect(value)
    );
  }
}
