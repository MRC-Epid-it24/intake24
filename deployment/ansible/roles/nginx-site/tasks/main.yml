- name: '{{ app|upper }} | Include shared vars'
  include_vars: '../instances/{{ instance }}/shared/config.json'

- name: '{{ app|upper }} NGINX site | Set full site name'
  set_fact: 
    site_name: '{{ env.prefix }}-{{ apps[app].site.name }}'

- name: '{{ app|upper }} NGINX site | Copy {{ site_name }} certificate'
  copy:
    src: '{{ apps[app].site.ssl.public_cert }}'
    dest: '/etc/ssl/certs/'
    owner: root
    group: root
    mode: '644'
  when: apps[app].site.ssl.enabled

- name: '{{ app|upper }} NGINX site | Copy {{ site_name }} private key'
  copy:
    src: '{{ apps[app].site.ssl.private_key }}'
    dest: '/etc/ssl/private/'
    owner: root
    group: root
    mode: '600'
  when: apps[app].site.ssl.enabled

- name: '{{ app|upper }} NGINX site | Ensure includes dir exists'
  file:
    path: /etc/nginx/includes
    state: directory
    owner: root
    group: root
    mode: '755'

- name: '{{ app|upper }} NGINX site | Copy includes dir content'
  copy:
    src: '{{ apps[app].site.includes_dir }}/'
    dest: '/etc/nginx/includes/'
    owner: root
    group: root
    mode: '644'

- name: '{{ app|upper }} NGINX site | Copy {{ site_name }} nginx site config'
  copy:
    src: '{{ apps[app].site.config_file }}'
    dest: '/etc/nginx/sites-available/{{ site_name }}'
    owner: root
    group: root
    mode: '644'

- name: '{{ app|upper }} NGINX site | Enable {{ site_name }} site'
  file:
    src: '/etc/nginx/sites-available/{{ site_name }}'
    dest: '/etc/nginx/sites-enabled/{{ site_name }}'
    state: link

- name: '{{ app|upper }} NGINX site | Reload nginx'
  shell: 'nginx -s reload'
